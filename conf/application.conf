application.secret="vZ?ylfWNaePxw/1pc@mwdkr]VyujGpd6O<B<:JgS]8RJn>m_MKfL^=D?4a@pSojl"

application.langs="en"
application.mode=DEV

dbplugin=disabled

applyEvolutions.default=true
applyDownEvolutions.default=true

db {
  default {
    hikaricp {
      file = "conf/hikaricp.dev.properties"
    }
    driver: "org.postgresql.Driver"
    url: "postgres://appuser:apppass@localhost/authdb;AUTO_SERVER=TRUE"

  }
}

securesocial {
  onLoginGoTo: / 
  onLogoutGoTo: /
  onSignUpGoTo: /
  onStartSignUpGoTo: /
  onStartResetPasswordGoTo: /
  onResetPasswordGoTo: /
  ssl: false
  cookie {
    absoluteTimeoutInMinutes: 1440
    idleTimeoutInMinutes: 1440
  }
  twitter {
    requestTokenUrl="https://twitter.com/oauth/request_token"
    accessTokenUrl="https://twitter.com/oauth/access_token"
    authorizationUrl="https://twitter.com/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  facebook {
    authorizationUrl="https://graph.facebook.com/oauth/authorize"
    accessTokenUrl="https://graph.facebook.com/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
    # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
    scope=email
  }

  google {
    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    clientId=your_client_id
    clientSecret=your_client_secret
    scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
  }

  linkedin {
    requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
    accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
    authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  # LinkedIn OAuth2 sample configuration
  # Change line in play.plugins from securesocial.core.providers.LinkedInProvider to securesocial.core.providers.LinkedInOAuth2Provider
  #linkedin {
  #	authorizationUrl="https://www.linkedin.com/uas/oauth2/authorization"
  #	accessTokenUrl="https://www.linkedin.com/uas/oauth2/accessToken"
  #	clientId=your_client_id
  #	clientSecret=your_client_secret
  #}

  github {
    authorizationUrl="https://github.com/login/oauth/authorize"
    accessTokenUrl="https://github.com/login/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  foursquare {
    authorizationUrl="https://foursquare.com/oauth2/authenticate"
    accessTokenUrl="https://foursquare.com/oauth2/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  dropbox {
    authorizationUrl="https://www.dropbox.com/1/oauth2/authorize"
    accessTokenUrl="https://api.dropbox.com/1/oauth2/token"
    clientId=your_app_key
    clientSecret=your_app_secret
  }

  xing {
    requestTokenUrl="https://api.xing.com/v1/request_token"
    accessTokenUrl="https://api.xing.com/v1/access_token"
    authorizationUrl="https://api.xing.com/v1/authorize"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  instagram {
    authorizationUrl="https://api.instagram.com/oauth/authorize"
    accessTokenUrl="https://api.instagram.com/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  vk {
    authorizationUrl="http://oauth.vk.com/authorize"
    accessTokenUrl="https://oauth.vk.com/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  concur {
    authorizationUrl="https://www.concursolutions.com/net2/oauth2/Login.aspx"
    accessTokenUrl="https://www.concursolutions.com/net2/oauth2/GetAccessToken.ashx"
    clientId=your_client_id
    clientSecret=your_client_secret
    scope="USER"
	}

  soundcloud {
		authorizationUrl = "https://soundcloud.com/connect"
		accessTokenUrl = "https://api.soundcloud.com/oauth2/token"
		clientId = your_client_id
		clientSecret = your_client_secret
		scope = "non-expiring"
	}

  weibo {
    authorizationUrl="https://api.weibo.com/oauth2/authorize"
    accessTokenUrl="https://api.weibo.com/oauth2/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  userpass {
    withUserNameSupport: false
    sendWelcomeEmail: true
    enableGravatarSupport: false
    tokenDuration: 60
    tokenDeleteInterval: 5
    signupSkipLogin: false
    enableTokenJob: true
    hasher: bcrypt
  }

}

slick {
  default: "edu.umass.cs.iesl.authstore.*"
}

smtp {
  mock: true
  host: mock
  user: mock
  password: mock
  from: "mock@mock"
  ssl: false
}

application {
  global: authexample.Global
  langs: en
  secret: %APPLICATION_SECRET%
}

logger {
  root: INFO
  play: INFO
  application: DEBUG
  specs: DEBUG
  authexample: DEBUG
  securesocial: DEBUG
}
